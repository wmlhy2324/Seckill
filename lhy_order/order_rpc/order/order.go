// Code generated by goctl. DO NOT EDIT.
// Source: order_rpc.proto

package order

import (
	"context"

	"Final_Assessment/lhy_order/order_rpc/types/order_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOrderRequest         = order_rpc.CreateOrderRequest
	CreateOrderResponse        = order_rpc.CreateOrderResponse
	CreateSeckillOrderRequest  = order_rpc.CreateSeckillOrderRequest
	CreateSeckillOrderResponse = order_rpc.CreateSeckillOrderResponse
	GetOrderDetailRequest      = order_rpc.GetOrderDetailRequest
	GetOrderDetailResponse     = order_rpc.GetOrderDetailResponse
	UpdateOrderStateRequest    = order_rpc.UpdateOrderStateRequest
	UpdateOrderStateResponse   = order_rpc.UpdateOrderStateResponse

	Order interface {
		CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error)
		UpdateOrderState(ctx context.Context, in *UpdateOrderStateRequest, opts ...grpc.CallOption) (*UpdateOrderStateResponse, error)
		GetOrderDetail(ctx context.Context, in *GetOrderDetailRequest, opts ...grpc.CallOption) (*GetOrderDetailResponse, error)
		CreateSeckillOrder(ctx context.Context, in *CreateSeckillOrderRequest, opts ...grpc.CallOption) (*CreateSeckillOrderResponse, error)
		CreateRollback(ctx context.Context, in *CreateSeckillOrderRequest, opts ...grpc.CallOption) (*CreateSeckillOrderResponse, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	client := order_rpc.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

func (m *defaultOrder) UpdateOrderState(ctx context.Context, in *UpdateOrderStateRequest, opts ...grpc.CallOption) (*UpdateOrderStateResponse, error) {
	client := order_rpc.NewOrderClient(m.cli.Conn())
	return client.UpdateOrderState(ctx, in, opts...)
}

func (m *defaultOrder) GetOrderDetail(ctx context.Context, in *GetOrderDetailRequest, opts ...grpc.CallOption) (*GetOrderDetailResponse, error) {
	client := order_rpc.NewOrderClient(m.cli.Conn())
	return client.GetOrderDetail(ctx, in, opts...)
}

func (m *defaultOrder) CreateSeckillOrder(ctx context.Context, in *CreateSeckillOrderRequest, opts ...grpc.CallOption) (*CreateSeckillOrderResponse, error) {
	client := order_rpc.NewOrderClient(m.cli.Conn())
	return client.CreateSeckillOrder(ctx, in, opts...)
}

func (m *defaultOrder) CreateRollback(ctx context.Context, in *CreateSeckillOrderRequest, opts ...grpc.CallOption) (*CreateSeckillOrderResponse, error) {
	client := order_rpc.NewOrderClient(m.cli.Conn())
	return client.CreateRollback(ctx, in, opts...)
}
