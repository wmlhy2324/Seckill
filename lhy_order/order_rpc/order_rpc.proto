syntax = "proto3";

package order_rpc;
option go_package = "./order_rpc";

message CreateOrderRequest {
    int32 user_id = 1;

}
message CreateOrderResponse {
   bytes data = 1;
    float  price = 2;
    int32 order_id = 3;
}
message  UpdateOrderStateRequest{
    int32 user_id = 1;
    int64  state = 2;  //-1: 已取消 0:待支付 1:未使用
}
message UpdateOrderStateResponse {
    int32 order_id = 1;
    float  price = 2;
    int32 user_id = 3;
    int64 state = 4;
    int64 CreateTime = 5;
}
message GetOrderDetailRequest {
    int32 user_id = 1;
}
message GetOrderDetailResponse {
    int32 order_id = 1;
    float  price = 2;
    int32 user_id = 3;
    int64 state = 4;
    int64 CreateTime = 5;

}
message CreateSeckillOrderRequest {
    int64 user_id = 1;
    int32 item_id = 2;
}
message CreateSeckillOrderResponse {
    int64 order_id = 1;
    float  price = 2;
    int32 user_id = 3;
    int64 state = 4;
    int64 CreateTime = 5;
}

service Order {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc UpdateOrderState(UpdateOrderStateRequest) returns (UpdateOrderStateResponse);
    rpc GetOrderDetail(GetOrderDetailRequest) returns (GetOrderDetailResponse);
    rpc CreateSeckillOrder(CreateSeckillOrderRequest) returns (CreateSeckillOrderResponse);
    rpc CreateRollback(CreateSeckillOrderRequest) returns(CreateSeckillOrderResponse);
}//goctl rpc protoc order_rpc.proto --go_out=./types --go-grpc_out=./types --zrpc_out=.