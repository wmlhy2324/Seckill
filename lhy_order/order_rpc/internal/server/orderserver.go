// Code generated by goctl. DO NOT EDIT.
// Source: order_rpc.proto

package server

import (
	"context"

	"Final_Assessment/lhy_order/order_rpc/internal/logic"
	"Final_Assessment/lhy_order/order_rpc/internal/svc"
	"Final_Assessment/lhy_order/order_rpc/types/order_rpc"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	order_rpc.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateOrder(ctx context.Context, in *order_rpc.CreateOrderRequest) (*order_rpc.CreateOrderResponse, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

func (s *OrderServer) UpdateOrderState(ctx context.Context, in *order_rpc.UpdateOrderStateRequest) (*order_rpc.UpdateOrderStateResponse, error) {
	l := logic.NewUpdateOrderStateLogic(ctx, s.svcCtx)
	return l.UpdateOrderState(in)
}

func (s *OrderServer) GetOrderDetail(ctx context.Context, in *order_rpc.GetOrderDetailRequest) (*order_rpc.GetOrderDetailResponse, error) {
	l := logic.NewGetOrderDetailLogic(ctx, s.svcCtx)
	return l.GetOrderDetail(in)
}

func (s *OrderServer) CreateSeckillOrder(ctx context.Context, in *order_rpc.CreateSeckillOrderRequest) (*order_rpc.CreateSeckillOrderResponse, error) {
	l := logic.NewCreateSeckillOrderLogic(ctx, s.svcCtx)
	return l.CreateSeckillOrder(in)
}

func (s *OrderServer) CreateRollback(ctx context.Context, in *order_rpc.CreateSeckillOrderRequest) (*order_rpc.CreateSeckillOrderResponse, error) {
	l := logic.NewCreateRollbackLogic(ctx, s.svcCtx)
	return l.CreateRollback(in)
}
