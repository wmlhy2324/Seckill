// Code generated by goctl. DO NOT EDIT.
// Source: cart_rpc.proto

package server

import (
	"context"

	"Final_Assessment/lhy_cart/cart_rpc/internal/logic"
	"Final_Assessment/lhy_cart/cart_rpc/internal/svc"
	"Final_Assessment/lhy_cart/cart_rpc/types/cart_rpc"
)

type CartServer struct {
	svcCtx *svc.ServiceContext
	cart_rpc.UnimplementedCartServer
}

func NewCartServer(svcCtx *svc.ServiceContext) *CartServer {
	return &CartServer{
		svcCtx: svcCtx,
	}
}

func (s *CartServer) CreateCart(ctx context.Context, in *cart_rpc.CreateCartRequest) (*cart_rpc.CartResponse, error) {
	l := logic.NewCreateCartLogic(ctx, s.svcCtx)
	return l.CreateCart(in)
}

func (s *CartServer) AddItem(ctx context.Context, in *cart_rpc.AddItemRequest) (*cart_rpc.AddItemResponse, error) {
	l := logic.NewAddItemLogic(ctx, s.svcCtx)
	return l.AddItem(in)
}

func (s *CartServer) GetCartDetail(ctx context.Context, in *cart_rpc.GetCartDetailRequest) (*cart_rpc.GetCartDetailResponse, error) {
	l := logic.NewGetCartDetailLogic(ctx, s.svcCtx)
	return l.GetCartDetail(in)
}

func (s *CartServer) ReduceInventory(ctx context.Context, in *cart_rpc.ReduceInventoryRequest) (*cart_rpc.ReduceInventoryResponse, error) {
	l := logic.NewReduceInventoryLogic(ctx, s.svcCtx)
	return l.ReduceInventory(in)
}

func (s *CartServer) IncreaseInventory(ctx context.Context, in *cart_rpc.IncreaseInventoryRequest) (*cart_rpc.IncreaseInventoryResponse, error) {
	l := logic.NewIncreaseInventoryLogic(ctx, s.svcCtx)
	return l.IncreaseInventory(in)
}
